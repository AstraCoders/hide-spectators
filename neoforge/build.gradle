plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
}

neoForge {
    version = neoforge_version
    // Automatically enable neoforge AccessTransformers if the file exists
    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.add(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric
        }
        client {
            client()
        }
        clientData {
            clientData()
        }
        serverData {
            serverData()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

tasks.register('publishCurseForge', net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    dependsOn(tasks.jar)
    apiToken = secrets.curseforgeKey
    def mainFile = upload(curseforge_project_id, jar)
    mainFile.releaseType = "release"
    mainFile.changelogType = "text"
    mainFile.changelog = rootProject.ext.mod_changelog
//    mainFile.addJavaVersion("Java ${project.java_version}")
    mainFile.addGameVersion(minecraft_version)
    mainFile.addModLoader("NeoForge")

    mainFile.addRequirement("cyclops-core")
}

modrinth {
    token = secrets.modrinthKey
    projectId = "${modrinth_project_id}"
    versionNumber = project.minecraft_version + '-' + project.version
    versionName = "${project.version} for NeoForge ${project.minecraft_version}"
    versionType = "release"
    uploadFile = jar
    gameVersions = [ project.minecraft_version ]
    changelog = provider { rootProject.ext.mod_changelog }
    loaders = ["neoforge"]

}
